group 'org.ants'
version '1.0-SNAPSHOT'

buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

test {
    useJUnitPlatform()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}


dependencies {
    annotationProcessor('org.projectlombok:lombok:1.18.12')
    runtime('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-log4j2')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb:2.0.3.RELEASE')
    compile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
    compile('cz.jirutka.spring:embedmongo-spring:1.3.1')
	compile('org.webjars:bootstrap:3.3.7-1')
    compileOnly('org.projectlombok:lombok:1.18.12')
    compile group: 'com.github.javafaker', name: 'javafaker', version: '0.16'
    testCompile 'org.yaml:snakeyaml:1.27'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.3.1'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.1'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.22.0'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.22.0'
}

//export test coverage
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}
//Ensure that the check task fails the build if there are failing integration tests.
check.dependsOn integrationTest
//Ensure that our unit tests are run before our integration tests
integrationTest.mustRunAfter test